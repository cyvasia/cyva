//                                   _           _    __ _ _        //
//                                  | |         | |  / _(_) |       //
//    __ _  ___ _ __   ___ _ __ __ _| |_ ___  __| | | |_ _| | ___   //
//   / _` |/ _ \ '_ \ / _ \ '__/ _` | __/ _ \/ _` | |  _| | |/ _ \  //
//  | (_| |  __/ | | |  __/ | | (_| | ||  __/ (_| | | | | | |  __/  //
//   \__, |\___|_| |_|\___|_|  \__,_|\__\___|\__,_| |_| |_|_|\___|  //
//    __/ |                                                         //
//   |___/                                                          //
//                                                                  //
// Generated by:  libraries/chain_id/identify_chain.cpp             //
//                                                                  //
// Warning: This is a generated file, any changes made here will be //
// overwritten by the build process.  If you need to change what    //
// is generated here, you should use the CMake variable             //
// GRAPHENE_EGENESIS_JSON to specify an embedded genesis state.     //
//                                                                  //

/*
 * Copyright (c) 2015, Cryptonomex, Inc.
 * All rights reserved.
 *
 * This source code is provided for evaluation in private test networks only, until September 8, 2015. After this date, this license expires and
 * the code may not be used, modified or distributed for any purpose. Redistribution and use in source and binary forms, with or without modification,
 * are permitted until September 8, 2015, provided that the following conditions are met:
 *
 * 1. The code and/or derivative works are used only for private test networks consisting of no more than 10 P2P nodes.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <graphene/chain/protocol/types.hpp>
#include <graphene/egenesis/egenesis.hpp>

namespace graphene { namespace egenesis {

using namespace graphene::chain;

static const char genesis_json_array[197][40+1] =
{
"{\n  \"initial_timestamp\": \"2018-11-11T11:",
"11:00\",\n  \"max_core_supply\": \"1000000000",
"00000000\",\n  \"initial_parameters\": {\n   ",
" \"current_fees\": {\n      \"parameters\": [",
"[\n        0,{\n          \"fee\": 1000000\n ",
"       }\n      ],[\n        1,{\n         ",
" \"basic_fee\": 1000000\n        }\n      ],",
"[\n        2,{\n          \"fee\": 1000000\n ",
"       }\n      ],[\n        3,{\n         ",
" \"fee\": 100000000\n        }\n      ],[\n  ",
"      4,{\n          \"fee\": 1000000\n     ",
"   }\n      ],[\n        5,{\n          \"fe",
"e\": 1000000\n        }\n      ],[\n        ",
"6,{\n          \"fee\": 1000000,\n          ",
"\"price_per_kbyte\": 10\n        }\n      ],",
"[\n        7,{\n          \"fee\": 1000000,\n",
"          \"price_per_kbyte\": 10\n        ",
"}\n      ],[\n        8,{\n          \"fee\":",
" 1000000\n        }\n      ],[\n        9,{",
"\n          \"fee\": 1000000\n        }\n    ",
"  ],[\n        10,{\n          \"fee\": 1000",
"000\n        }\n      ],[\n        11,{\n   ",
"       \"fee\": 1000000\n        }\n      ]\n",
"      ],\n      \"scale\": 10000\n    },\n   ",
" \"block_interval\": 30,\n    \"maintenance_",
"interval\": 86400,\n    \"maintenance_skip_",
"slots\": 3,\n    \"miner_proposal_review_pe",
"riod\": 1209600,\n    \"freeze_transfers_af",
"ter_block\": 1000000,\n    \"maximum_transa",
"ction_size\": 4096,\n    \"maximum_block_si",
"ze\": 8388608,\n    \"maximum_time_until_ex",
"piration\": 86400,\n    \"maximum_proposal_",
"lifetime\": 2419200,\n    \"maximum_asset_f",
"eed_publishers\": 10,\n    \"maximum_miner_",
"count\": 11,\n    \"maximum_authority_membe",
"rship\": 10,\n    \"cashback_vesting_period",
"_seconds\": 31536000,\n    \"cashback_vesti",
"ng_threshold\": \"1000000000\",\n    \"max_pr",
"edicate_opcode\": 1,\n    \"max_authority_d",
"epth\": 2,\n    \"extensions\": []\n  },\n  \"i",
"nitial_accounts\": [{\n      \"name\": \"CVA8",
"gqcFcJ885npDk1DsD2GW51EdWr5GG6z32xmSs3Us",
"gpcqukqzp\",\n      \"owner_key\": \"CVA8gqcF",
"cJ885npDk1DsD2GW51EdWr5GG6z32xmSs3Usgpcq",
"ukqzp\",\n      \"active_key\": \"CVA8gqcFcJ8",
"85npDk1DsD2GW51EdWr5GG6z32xmSs3Usgpcqukq",
"zp\"\n    },{\n      \"name\": \"CVA6Z4cwAbUmz",
"WkgbexJyWDac71T7QwYXcexjnT5dswJTGAAMiAvH",
"\",\n      \"owner_key\": \"CVA6Z4cwAbUmzWkgb",
"exJyWDac71T7QwYXcexjnT5dswJTGAAMiAvH\",\n ",
"     \"active_key\": \"CVA6Z4cwAbUmzWkgbexJ",
"yWDac71T7QwYXcexjnT5dswJTGAAMiAvH\"\n    }",
",{\n      \"name\": \"CVA7BvWbrutnjpo3WjArx1",
"F3pTymMcTBZMRrqCzF3AK1yCzSFsRGC\",\n      ",
"\"owner_key\": \"CVA7BvWbrutnjpo3WjArx1F3pT",
"ymMcTBZMRrqCzF3AK1yCzSFsRGC\",\n      \"act",
"ive_key\": \"CVA7BvWbrutnjpo3WjArx1F3pTymM",
"cTBZMRrqCzF3AK1yCzSFsRGC\"\n    },{\n      ",
"\"name\": \"CVA73x429wub7dtrJRbatoz9rE6tAWx",
"1pN8i5yuvbUVChY8ksQrbQ\",\n      \"owner_ke",
"y\": \"CVA73x429wub7dtrJRbatoz9rE6tAWx1pN8",
"i5yuvbUVChY8ksQrbQ\",\n      \"active_key\":",
" \"CVA73x429wub7dtrJRbatoz9rE6tAWx1pN8i5y",
"uvbUVChY8ksQrbQ\"\n    },{\n      \"name\": \"",
"CVA7FDmURE9cWJ2C674NMPfHp2Uh93N1bFReTnXv",
"ZynupoAJNNktz\",\n      \"owner_key\": \"CVA7",
"FDmURE9cWJ2C674NMPfHp2Uh93N1bFReTnXvZynu",
"poAJNNktz\",\n      \"active_key\": \"CVA7FDm",
"URE9cWJ2C674NMPfHp2Uh93N1bFReTnXvZynupoA",
"JNNktz\"\n    },{\n      \"name\": \"CVA5zJUpk",
"QNKg2oDmuJ8yZhtVD9jupezL3w84SZDpuuPcSxwp",
"rhSx\",\n      \"owner_key\": \"CVA5zJUpkQNKg",
"2oDmuJ8yZhtVD9jupezL3w84SZDpuuPcSxwprhSx",
"\",\n      \"active_key\": \"CVA5zJUpkQNKg2oD",
"muJ8yZhtVD9jupezL3w84SZDpuuPcSxwprhSx\"\n ",
"   },{\n      \"name\": \"CVA6DWJucmvAR3BBfo",
"713PA4roMkzAvrmnWENgk8g4AeBkHj7yhmQ\",\n  ",
"    \"owner_key\": \"CVA6DWJucmvAR3BBfo713P",
"A4roMkzAvrmnWENgk8g4AeBkHj7yhmQ\",\n      ",
"\"active_key\": \"CVA6DWJucmvAR3BBfo713PA4r",
"oMkzAvrmnWENgk8g4AeBkHj7yhmQ\"\n    },{\n  ",
"    \"name\": \"CVA84K4aaoBL1WdZLQy1TjhQezo",
"JcwbH3GF2PEav6bq8vNxaxCtpz\",\n      \"owne",
"r_key\": \"CVA84K4aaoBL1WdZLQy1TjhQezoJcwb",
"H3GF2PEav6bq8vNxaxCtpz\",\n      \"active_k",
"ey\": \"CVA84K4aaoBL1WdZLQy1TjhQezoJcwbH3G",
"F2PEav6bq8vNxaxCtpz\"\n    },{\n      \"name",
"\": \"CVA5owDsDBa7HctDg6NVgjidEQSHVcn4UbP9",
"FLprnR2y3wvSk3Q17\",\n      \"owner_key\": \"",
"CVA5owDsDBa7HctDg6NVgjidEQSHVcn4UbP9FLpr",
"nR2y3wvSk3Q17\",\n      \"active_key\": \"CVA",
"5owDsDBa7HctDg6NVgjidEQSHVcn4UbP9FLprnR2",
"y3wvSk3Q17\"\n    },{\n      \"name\": \"CVA8V",
"FFSRcasr5p6HnHx1zfJ3QoifSWzseH22oXegZBqc",
"iFSGBt9N\",\n      \"owner_key\": \"CVA8VFFSR",
"casr5p6HnHx1zfJ3QoifSWzseH22oXegZBqciFSG",
"Bt9N\",\n      \"active_key\": \"CVA8VFFSRcas",
"r5p6HnHx1zfJ3QoifSWzseH22oXegZBqciFSGBt9",
"N\"\n    },{\n      \"name\": \"CVA7ZvcybkzCBm",
"nDrg4tXd8hmx1TVeZrnCBonrCWuYgeCGVic23vA\"",
",\n      \"owner_key\": \"CVA7ZvcybkzCBmnDrg",
"4tXd8hmx1TVeZrnCBonrCWuYgeCGVic23vA\",\n  ",
"    \"active_key\": \"CVA7ZvcybkzCBmnDrg4tX",
"d8hmx1TVeZrnCBonrCWuYgeCGVic23vA\"\n    },",
"{\n      \"name\": \"CVA5hu76UMgs9RbLmuroFgv",
"tLw8P3onig72WcEUFh2Q2CbAFxdcKw\",\n      \"",
"owner_key\": \"CVA5hu76UMgs9RbLmuroFgvtLw8",
"P3onig72WcEUFh2Q2CbAFxdcKw\",\n      \"acti",
"ve_key\": \"CVA5hu76UMgs9RbLmuroFgvtLw8P3o",
"nig72WcEUFh2Q2CbAFxdcKw\"\n    },{\n      \"",
"name\": \"CVA5rGHsHxXFy8vT39cb2ftoZCZhDENo",
"C3TurBujzrVe2prSAR7uJ\",\n      \"owner_key",
"\": \"CVA5rGHsHxXFy8vT39cb2ftoZCZhDENoC3Tu",
"rBujzrVe2prSAR7uJ\",\n      \"active_key\": ",
"\"CVA5rGHsHxXFy8vT39cb2ftoZCZhDENoC3TurBu",
"jzrVe2prSAR7uJ\"\n    },{\n      \"name\": \"C",
"VA6YGwP2ya5YBbGfwDaHwjzZpt5VaiKEivS6g8uZ",
"D6us5UDPCHe5\",\n      \"owner_key\": \"CVA6Y",
"GwP2ya5YBbGfwDaHwjzZpt5VaiKEivS6g8uZD6us",
"5UDPCHe5\",\n      \"active_key\": \"CVA6YGwP",
"2ya5YBbGfwDaHwjzZpt5VaiKEivS6g8uZD6us5UD",
"PCHe5\"\n    },{\n      \"name\": \"CVA5KtqUqV",
"1HUv3D6Dy8B3wUc5y2D9VKk7U75vB2twLWijYZUa",
"kzf\",\n      \"owner_key\": \"CVA5KtqUqV1HUv",
"3D6Dy8B3wUc5y2D9VKk7U75vB2twLWijYZUakzf\"",
",\n      \"active_key\": \"CVA5KtqUqV1HUv3D6",
"Dy8B3wUc5y2D9VKk7U75vB2twLWijYZUakzf\"\n  ",
"  }\n  ],\n  \"initial_assets\": [\n  ],\n  \"i",
"nitial_active_miners\": 11,\n  \"initial_mi",
"ner_candidates\": [{\n      \"owner_name\": ",
"\"CVA8gqcFcJ885npDk1DsD2GW51EdWr5GG6z32xm",
"Ss3Usgpcqukqzp\",\n      \"block_signing_ke",
"y\": \"CVA8gqcFcJ885npDk1DsD2GW51EdWr5GG6z",
"32xmSs3Usgpcqukqzp\"\n    },{\n      \"owner",
"_name\": \"CVA6Z4cwAbUmzWkgbexJyWDac71T7Qw",
"YXcexjnT5dswJTGAAMiAvH\",\n      \"block_si",
"gning_key\": \"CVA6Z4cwAbUmzWkgbexJyWDac71",
"T7QwYXcexjnT5dswJTGAAMiAvH\"\n    },{\n    ",
"  \"owner_name\": \"CVA7BvWbrutnjpo3WjArx1F",
"3pTymMcTBZMRrqCzF3AK1yCzSFsRGC\",\n      \"",
"block_signing_key\": \"CVA7BvWbrutnjpo3WjA",
"rx1F3pTymMcTBZMRrqCzF3AK1yCzSFsRGC\"\n    ",
"},{\n      \"owner_name\": \"CVA73x429wub7dt",
"rJRbatoz9rE6tAWx1pN8i5yuvbUVChY8ksQrbQ\",",
"\n      \"block_signing_key\": \"CVA73x429wu",
"b7dtrJRbatoz9rE6tAWx1pN8i5yuvbUVChY8ksQr",
"bQ\"\n    },{\n      \"owner_name\": \"CVA7FDm",
"URE9cWJ2C674NMPfHp2Uh93N1bFReTnXvZynupoA",
"JNNktz\",\n      \"block_signing_key\": \"CVA",
"7FDmURE9cWJ2C674NMPfHp2Uh93N1bFReTnXvZyn",
"upoAJNNktz\"\n    },{\n      \"owner_name\": ",
"\"CVA5zJUpkQNKg2oDmuJ8yZhtVD9jupezL3w84SZ",
"DpuuPcSxwprhSx\",\n      \"block_signing_ke",
"y\": \"CVA5zJUpkQNKg2oDmuJ8yZhtVD9jupezL3w",
"84SZDpuuPcSxwprhSx\"\n    },{\n      \"owner",
"_name\": \"CVA6DWJucmvAR3BBfo713PA4roMkzAv",
"rmnWENgk8g4AeBkHj7yhmQ\",\n      \"block_si",
"gning_key\": \"CVA6DWJucmvAR3BBfo713PA4roM",
"kzAvrmnWENgk8g4AeBkHj7yhmQ\"\n    },{\n    ",
"  \"owner_name\": \"CVA84K4aaoBL1WdZLQy1Tjh",
"QezoJcwbH3GF2PEav6bq8vNxaxCtpz\",\n      \"",
"block_signing_key\": \"CVA84K4aaoBL1WdZLQy",
"1TjhQezoJcwbH3GF2PEav6bq8vNxaxCtpz\"\n    ",
"},{\n      \"owner_name\": \"CVA5owDsDBa7Hct",
"Dg6NVgjidEQSHVcn4UbP9FLprnR2y3wvSk3Q17\",",
"\n      \"block_signing_key\": \"CVA5owDsDBa",
"7HctDg6NVgjidEQSHVcn4UbP9FLprnR2y3wvSk3Q",
"17\"\n    },{\n      \"owner_name\": \"CVA8VFF",
"SRcasr5p6HnHx1zfJ3QoifSWzseH22oXegZBqciF",
"SGBt9N\",\n      \"block_signing_key\": \"CVA",
"8VFFSRcasr5p6HnHx1zfJ3QoifSWzseH22oXegZB",
"qciFSGBt9N\"\n    },{\n      \"owner_name\": ",
"\"CVA7ZvcybkzCBmnDrg4tXd8hmx1TVeZrnCBonrC",
"WuYgeCGVic23vA\",\n      \"block_signing_ke",
"y\": \"CVA7ZvcybkzCBmnDrg4tXd8hmx1TVeZrnCB",
"onrCWuYgeCGVic23vA\"\n    }\n  ],\n  \"initia",
"l_chain_id\": \"107e3efd3df89902907f538502",
"6d68237721c2d203e14a506dae7d9ec50675a9\",",
"\n  \"initial_balances\": [{\n      \"owner\":",
" \"CVA5hu76UMgs9RbLmuroFgvtLw8P3onig72WcE",
"UFh2Q2CbAFxdcKw\",\n      \"asset_symbol\": ",
"\"CVA\",\n      \"amount\": \"6500000000000000",
"0\"\n    },{\n      \"owner\": \"CVA5rGHsHxXFy",
"8vT39cb2ftoZCZhDENoC3TurBujzrVe2prSAR7uJ",
"\",\n      \"asset_symbol\": \"CVA\",\n      \"a",
"mount\": \"7000000000000000\"\n    },{\n     ",
" \"owner\": \"CVA6YGwP2ya5YBbGfwDaHwjzZpt5V",
"aiKEivS6g8uZD6us5UDPCHe5\",\n      \"asset_",
"symbol\": \"CVA\",\n      \"amount\": \"5000000",
"000000000\"\n    },{\n      \"owner\": \"CVA5K",
"tqUqV1HUv3D6Dy8B3wUc5y2D9VKk7U75vB2twLWi",
"jYZUakzf\",\n      \"asset_symbol\": \"CVA\",\n",
"      \"amount\": \"3000000000000000\"\n    }",
"\n  ],\n  \"immutable_parameters\": {\n    \"m",
"in_miner_count\": 11,\n    \"num_special_ac",
"counts\": 0,\n    \"num_special_assets\": 0\n",
"  }\n}\n"
};

chain_id_type get_egenesis_chain_id()
{
   return chain_id_type( "355c5660cc22ea1c6a0a3de99939bfc4e9c8ec8e64a7928c9b48345a2b00f4b6" );
}

void compute_egenesis_json( std::string& result )
{
   result.reserve( 7846 );
   result.resize(0);
   for( size_t i=0; i<197-1; i++ )
   {
      result.append( genesis_json_array[i], 40 );
   }
   result.append( std::string( genesis_json_array[ 197-1 ] ) );
   return;
}

fc::sha256 get_egenesis_json_hash()
{
   return fc::sha256( "355c5660cc22ea1c6a0a3de99939bfc4e9c8ec8e64a7928c9b48345a2b00f4b6" );
}

} }
